name: todo CI

on:
  push:
    branches:
      - 'main'

jobs:
  deploy:
    name: Build Image
    runs-on: ubuntu-latest
    # strategy:
    #   max-parallel: 4
    #   matrix:
    #     ruby-version: [3.1]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Check database
      run: ls 
      shell: bash

    - name: Check file 
      run: cat database.yml
      shell: bash

    - name: Set up Ruby
      uses: ruby/setup-ruby@359bebbc29cbe6c87da6bc9ea3bc930432750108
      with:
        ruby-version: '3.1'

    - name: Install Dependencies
      run: bundle install
    
    - name: Run tests
      run: bundle exec rake db:setup

    - name: Start the server
      run: rails s

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: gika-container-repository
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

    - name: Update kube config
      run: aws eks update-kubeconfig --name gika-eks --region eu-west-1

    - name: Deploy to EKS
      run: |
        kubectl apply -f fedhr-postgres-deployment.yaml
        kubectl apply -f fedhr-graphene-deployment.yaml
        kubectl apply -f fedhr-ingress.yaml
