apiVersion: apps/v1
kind: Deployment

metadata:
  name: todo
  namespace: default
  labels:
    app: web
    app.kubernetes.io/name: web

spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
      app.kubernetes.io/name: web

  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: web
        app.kubernetes.io/name: web
    spec:
     containers:
     - name: todo
       image: 995105043624.dkr.ecr.eu-west-1.amazonaws.com/gika-container-repository:latest
      #  imagePullPolicy: IfNotPresent
       command: ["rails", "s"]
       ports:
       - containerPort: 8080
      #  readinessProbe:
      #   httpGet:
      #     path: /health_check/healthcheck
      #     port: 8080
      #   initialDelaySeconds: 10
      #   periodSeconds: 10
      #   timeoutSeconds: 2
       resources:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"

---
apiVersion: v1
kind: Service
metadata:
  name: todo
  namespace: default
  labels: 
    app: web
    app.kubernetes.io/name: web
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /app/public/404.html
spec:
  selector:
    app: web
  # clusterIP: None  
  type: NodePort #ClusterIP
  ports:
    # - protocol: TCP
      # this service will expose this port
      - port: 8080
      # Port we're targeting on the pod container
        targetPort: 8080
